---
version: 2.1

executors:
  dev-env:
    environment:
      DOCKER_TEMP_DEV_ENV_IMAGE: simonsdave/cloudfeaster-dev-env:bindle
      DOCKER_TEMP_RUNTIME_IMAGE: simonsdave/cloudfeaster:bindle
      DOCKER_TEMP_RUNTIME_LITE_IMAGE: simonsdave/cloudfeaster-lite:bindle
    docker:
      - image: simonsdave/bionic-dev-env:v0.6.13
        auth:
          username: $DOCKER_EXECUTOR_DOCKERHUB_USERNAME
          password: $DOCKER_EXECUTOR_DOCKERHUB_PASSWORD

jobs:
  build_test_and_deploy:
    working_directory: ~/repo
    executor: dev-env
    steps:
      - checkout
      - run:
          name: Install Chrome
          command: bin/install-chrome.sh
      - run:
          name: Install Chromedriver
          command: bin/install-chromedriver.sh
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: Install Python prerequisites
          command: python3.7 -m pip install --requirement requirements.txt
      - save_cache:
          paths:
            - ./env
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: Run pip check
          command: run-pip-check.sh
      - run:
          name: Lint Python Files
          command: run-flake8.sh
      - run:
          name: PyCQA/bandit
          command: run-bandit.sh
      - run:
          name: Lint Shell Scripts
          command: run-shelllint.sh --verbose
      - run:
          name: Lint Markdown Files
          command: run-markdownlint.sh --verbose
      - run:
          name: Lint YAML Files
          command: run-yamllint.sh --verbose
      - run:
          name: Lint JSON Files
          command: run-jsonlint.sh --verbose
      - run:
          name: Scan repo for passwords, private keys, etc.
          command: run-repo-security-scanner.sh
      - run:
          name: Run unit tests
          command: run-unit-tests.sh
      - run:
          name: Upload Unit Test Coverage Data to Codecov
          command: codecov
      - run:
          name: Build README.rst
          command: build-readme-dot-rst.sh
      - run:
          name: Build python packages
          command: build-python-package.sh
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build docker image
          command: |
            dockerfiles/dev-env/build-docker-image.sh \
              "dist/cloudfeaster-$(python-version.sh).tar.gz" \
              "${DOCKER_TEMP_DEV_ENV_IMAGE}"

            dockerfiles/runtime/build-docker-image.sh \
              "dist/cloudfeaster-$(python-version.sh).tar.gz" \
              "${DOCKER_TEMP_RUNTIME_IMAGE}"

            dockerfiles/runtime-lite/build-docker-image.sh \
              "dist/cloudfeaster-$(python-version.sh).tar.gz" \
              "${DOCKER_TEMP_RUNTIME_LITE_IMAGE}"
      - run:
          name: Test docker image
          command: |
            tests/integration/dev-env/docker_image_integration_tests.sh \
              "${DOCKER_TEMP_DEV_ENV_IMAGE}" \
              "${PYPI_USERNAME}" \
              "${PYPI_PASSWORD}"

            tests/integration/runtime/docker_image_integration_tests.sh \
              "${DOCKER_TEMP_RUNTIME_IMAGE}"

            tests/integration/runtime/docker_image_integration_tests.sh \
              "${DOCKER_TEMP_RUNTIME_LITE_IMAGE}"
      - run:
          name: Run docker image vulnerability risk assessment
          command: |
            curl \
              -s \
              -L \
              https://raw.githubusercontent.com/simonsdave/clair-cicd/master/bin/assess-image-risk.sh | \
              bash -s -- --verbose --whitelist 'file://clair-cicd-whitelist-dev-env.json' "${DOCKER_TEMP_DEV_ENV_IMAGE}"

            curl \
              -s \
              -L \
              https://raw.githubusercontent.com/simonsdave/clair-cicd/master/bin/assess-image-risk.sh | \
              bash -s -- --verbose --whitelist 'file://clair-cicd-whitelist-runtime.json' "${DOCKER_TEMP_RUNTIME_IMAGE}"

            curl \
              -s \
              -L \
              https://raw.githubusercontent.com/simonsdave/clair-cicd/master/bin/assess-image-risk.sh | \
              bash -s -- --verbose --whitelist 'file://clair-cicd-whitelist-runtime-lite.json' "${DOCKER_TEMP_RUNTIME_LITE_IMAGE}"
      - deploy:
          name: Push docker image to dockerhub
          command: |
            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              dockerfiles/dev-env/tag-and-push-docker-image.sh \
                "${DOCKER_TEMP_DEV_ENV_IMAGE}" \
                "latest" \
                "${DOCKER_PASSWORD}"

              dockerfiles/runtime/tag-and-push-docker-image.sh \
                "${DOCKER_TEMP_RUNTIME_IMAGE}" \
                "latest" \
                "${DOCKER_PASSWORD}"

              dockerfiles/runtime-lite/tag-and-push-docker-image.sh \
                "${DOCKER_TEMP_RUNTIME_LITE_IMAGE}" \
                "latest" \
                "${DOCKER_PASSWORD}"
            fi

            if [[ "${CIRCLE_BRANCH}" =~ ^release-([0-9]+.)*[0-9]+$ ]]; then
              dockerfiles/dev-env/tag-and-push-docker-image.sh \
                "${DOCKER_TEMP_DEV_ENV_IMAGE}" \
                "v${CIRCLE_BRANCH##release-}" \
                "${DOCKER_PASSWORD}"

              dockerfiles/runtime/tag-and-push-docker-image.sh \
                "${DOCKER_TEMP_RUNTIME_IMAGE}" \
                "v${CIRCLE_BRANCH##release-}" \
                "${DOCKER_PASSWORD}"

              dockerfiles/runtime-lite/tag-and-push-docker-image.sh \
                "${DOCKER_TEMP_RUNTIME_LITE_IMAGE}" \
                "v${CIRCLE_BRANCH##release-}" \
                "${DOCKER_PASSWORD}"
            fi

workflows:
  version: 2
  commit:
    jobs:
      - build_test_and_deploy:
          context:
            - cloudfeaster
            - docker-executor
