#!/usr/bin/env python

# clfq list | while read queue; do clfq delete $queue; done

import os
import sys

import boto.sqs.connection

def usage(fmt="usage: %s [list|create|delete] ..."):
    print fmt % os.path.split(sys.argv[0])[1]
    sys.exit(1)

def create(sqs_conn, args):
    if 1 != len(args):
        usage("usage: %s create <queue-name>")
    queue_name = args[0]
    queue = sqs_conn.get_queue(queue_name)
    if queue:
        print "'%s' already exists" % queue.name
    else:
        queue = sqs_conn.create_queue(queue_name)
        print "Created '%s'" % queue.name

def delete(sqs_conn, args):
    if 1 != len(args):
        usage("usage: %s delete <queue-name>")
    queue_name = args[0]
    queue = sqs_conn.get_queue(queue_name)
    if queue:
        queue.delete()
        print "Deleted '%s'" % queue.name
    else:
        print "'%s' does not exist" % queue.name

def list(sqs_conn, args):
    if 0 != len(args):
        usage("usage: %s list")
    for queue in sqs_conn.get_all_queues():
        print queue.name

commands = {
    "create": create,
    "delete": delete,
    "list": list,
}

if __name__ == "__main__":

    args = sys.argv[1:]
    if 0 == len(args):
        usage()

    command = commands.get(args[0].strip().lower(), None)
    if not command:
        usage()

    command(boto.sqs.connection.SQSConnection(), args[1:])
