#!/usr/bin/env python

# clf queue list | while read queue; do clfq delete $queue; done

import os
import sys

import boto.sqs.connection

def usage(fmt="[queue] ..."):
    print "usage: %s %s" % (os.path.split(sys.argv[0])[1], fmt)
    sys.exit(1)

def queue_usage(fmt="[create|delete|list] ..."):
    usage("queue %s" % fmt)

def queue_create(sqs_conn, args):
    if 1 != len(args):
        queue_usage("create <queue-name>")
    queue_name = args[0]
    queue = sqs_conn.get_queue(queue_name)
    if queue:
        print "'%s' already exists" % queue.name
    else:
        queue = sqs_conn.create_queue(queue_name)
        print "Created '%s'" % queue.name

def queue_delete(sqs_conn, args):
    if 1 != len(args):
        queue_usage("delete <queue-name>")
    queue_name = args[0]
    queue = sqs_conn.get_queue(queue_name)
    if queue:
        queue.delete()
        print "Deleted '%s'" % queue_name
    else:
        print "'%s' does not exist" % queue_name

def queue_list(sqs_conn, args):
    if 0 != len(args):
        queue_usage("list")
    for queue in sqs_conn.get_all_queues():
        print "%s (%d)" % (queue.name, queue.count())

def queue(args):
    if not len(args):
        queue_usage()

    commands = {
        "create": queue_create,
        "delete": queue_delete,
        "list": queue_list,
    }

    command = commands.get(args[0].strip().lower(), None)
    if not command:
        queue_usage()

    command(boto.sqs.connection.SQSConnection(), args[1:])

if __name__ == "__main__":

    args = sys.argv[1:]
    if 0 == len(args):
        usage()

    commands = {
        "queue": queue,
    }
    command = commands.get(args[0].strip().lower(), None)
    if not command:
        usage()

    command(args[1:])
